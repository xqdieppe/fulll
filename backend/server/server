#!/bin/node

/* Native modules */
const https = require('https');
const http = require('http');
const fs = require('fs');

/* Npm modules */
const yaml = require('yaml');
const express = require('express');
const app = express();

/* Server configuration */
const configuration = yaml.parse(fs.readFileSync('./configuration/server.yaml', 'utf-8'));
const options = {
  key: fs.readFileSync(`./configuration/${configuration.https.key}`),
  cert: fs.readFileSync(`./configuration/${configuration.https.cert}`)
};
app.use(express.json());
const tls_server = https.createServer(options, app);
const server = http.createServer(app);
const mysql = require('./mysql');

/* Entry Points */;
app.get('/fleet/:id', async (req, res) => {
  	const fleet = req.params.id;
	const response = await require('./mysql/get_fleet')(mysql, fleet);
	res.end(JSON.stringify(response));
})

app.post('/fleet/create', async (req, res) => {
	const { uid } = req.body;
	const response = await require('./mysql/create_fleet')(mysql);
	res.end('' + response[0].id);
})

app.post('/vehicle/register', async (req, res) => {
	const { fleet, plate } = req.body;
	const response = await require('./mysql/register_vehicle')(mysql, fleet, plate);
	res.end(JSON.stringify(response));
})

app.post('/vehicle/localize', async (req, res) => {
	const { fleet, plate, lat, lng, alt } = req.body;
	const response = await require('./mysql/localize_vehicle')(mysql, fleet, plate, lat, lng, alt);
	res.end(JSON.stringify(response));
})

tls_server.listen(configuration.https.port);
server.listen(configuration.http.port)
